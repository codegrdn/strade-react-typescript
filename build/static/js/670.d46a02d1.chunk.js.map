{"version":3,"file":"static/js/670.d46a02d1.chunk.js","mappings":"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","sources":["api/rest/CoinService.ts","components/landing/main/hero/purchase/data/currency.ts","components/markets/main/filters/favorite/Favorite.tsx","components/markets/context/MarketsContext.ts","components/markets/header/nav/wrap-language/NavWrapLanguage.tsx","components/markets/header/nav/item/NavItem.tsx","components/markets/header/nav/nav/Nav.tsx","components/markets/header/header/HeaderAdmin.tsx","components/markets/main/bar/BarMarket.tsx","helpers/coin.ts","helpers/formating.ts","components/markets/main/card/item/hooks/useCoin.ts","components/markets/main/card/item/CardMarketItem.tsx","components/markets/main/card/list/CardMarketList.tsx","components/markets/main/table/th-star/ThStar.tsx","components/markets/main/table/Table.tsx","components/markets/main/filters/search/Search.tsx","api/rest/CategoryService.ts","components/markets/main/filters/category/Category.tsx","components/markets/main/filters/currency/Сurrency.tsx","components/markets/main/filters/platform/Platform.tsx","components/markets/main/filters/price/Price.tsx","components/markets/main/filters/data/filters.ts","components/markets/main/filters/FiltersPageMarket.tsx","components/markets/main/hooks/useCoins.ts","helpers/queryRoute.ts","components/markets/main/hooks/useFilters.ts","components/markets/main/hooks/usePlatforms.ts","components/markets/main/hooks/useCurrency.ts","components/markets/main/MarketMain.tsx","components/markets/Markets.tsx","components/markets/main/chart/hooks/useRequestChart.ts","components/markets/main/chart/CoinChart.tsx","components/markets/main/context/MarketMainContext.ts","components/shared/loader/Loader.tsx","components/shared/logo/header/LogoHeader.tsx","components/shared/user-selector/img/account.svg","components/shared/user-selector/UserSelectorAdmin.tsx","env.ts","helpers/colors.ts","helpers/currencies.ts","hooks/useRequest.ts"],"sourcesContent":["import { baseUrlApi } from './../../env';\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\nconst url = `${baseUrlApi}/coins`;\r\n\r\nexport interface ICoinsMarkets {\r\n    vs_currency: string,\r\n    ids?: string,\r\n    category?: string,\r\n    order?: string,\r\n    per_page?: number,\r\n    page?: number,\r\n    sparkline?: boolean,\r\n    price_change_percentage?: string,\r\n}\r\n\r\nexport const getCoinsMarkets: (params: ICoinsMarkets) => AxiosRequestConfig = (params) => {\r\n    return {\r\n        url: `${url}/markets`,\r\n        method: 'GET',\r\n        params: params\r\n    }\r\n}\r\n\r\ninterface ICoinListParams {\r\n    include_platform: boolean,\r\n}\r\n\r\nexport const getCoinsList: (params: ICoinListParams) => AxiosRequestConfig = (params = { include_platform: false }) => {\r\n    return {\r\n        url: `${url}/list`,\r\n        method: 'GET',\r\n        params: params\r\n    }\r\n}\r\n\r\n\r\ninterface ICoinChartParams {\r\n    vs_currency: string,\r\n    days: string,\r\n    interval?: string,\r\n}\r\n\r\nexport const getChart: (id: string, params: ICoinChartParams)  => AxiosRequestConfig = (id, params) => {\r\n    return {\r\n        url: `${url}/${id}/market_chart`,\r\n        method: 'GET',\r\n        params: params\r\n    }\r\n}","import ISelect from \"../../../../../../types/ISelect\";\r\n\r\nexport const currency: ISelect[] = [\r\n    {\r\n        value: 'usd',\r\n        label: 'USD',\r\n    },\r\n    {\r\n        value: 'rub',\r\n        label: 'RUB',\r\n    },\r\n];\r\n\r\nexport const defaultCurrency: ISelect = currency[0];","import { FC, useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { MarketMainContext } from '../../context/MarketMainContext';\r\n\r\nenum Classes {\r\n    DEFAULT_CLASS = 'markets__coin-item',\r\n    ACTIVE_CLASS = 'markets__coin-item--active',\r\n}\r\n\r\ninterface FavoriteProps {\r\n\r\n}\r\n\r\nconst Favorite: FC<FavoriteProps>  = () => {\r\n    const {t} = useTranslation();\r\n    const { filters } = useContext(MarketMainContext);\r\n    const [classes, setClasses] = useState<string>(filters.list.isFavorite ? Classes.ACTIVE_CLASS : Classes.DEFAULT_CLASS);\r\n\r\n    const handlerClick = () => {\r\n        if (Classes.DEFAULT_CLASS === classes) {\r\n            setClasses(Classes.DEFAULT_CLASS + \" \" +  Classes.ACTIVE_CLASS);\r\n            filters.addFilter({isFavorite: true});\r\n        } else {\r\n            setClasses(Classes.DEFAULT_CLASS);\r\n            filters.addFilter({isFavorite: false});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ul className=\"markets__coin-list\">\r\n            <li className={classes} onClick={handlerClick}>{t('markets.filters.favourites')}</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Favorite;","import React from \"react\";\r\n\r\ninterface IMobileMenu {\r\n    menuMobile: boolean,\r\n    toggleMenuMobile: () => void\r\n}\r\n\r\ninterface IMarketsContext {\r\n    menuMobile: IMobileMenu\r\n}\r\n\r\nexport const marketsState: IMarketsContext = {\r\n    menuMobile: {\r\n        menuMobile: false,\r\n        toggleMenuMobile: () => {}\r\n    }\r\n}\r\n\r\nexport const MarketsContext = React.createContext<IMarketsContext>(marketsState);","import { FC } from 'react';\r\nimport SelectLanguage from '../../../../shared/select/language/SelectLanguage';\r\n\r\ninterface NavWrapLanguageProps {\r\n\r\n}\r\n\r\nconst NavWrapLanguage: FC<NavWrapLanguageProps> = () => {\r\n    return (\r\n        <div className=\"dashboard-header__menu-item-wrap\">\r\n            <div className=\"dashboard-header__menu-item\">\r\n                <SelectLanguage />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavWrapLanguage;","import { FC } from 'react';\r\nimport { notShowMenu, routes } from '../../../../../route/routes';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { isActiveURL } from '../../../../../helpers/route';\r\n\r\ninterface NavItemProps {\r\n\r\n}\r\n\r\nconst NavItem: FC<NavItemProps> = () => {\r\n    const { t } = useTranslation();\r\n    const location = useLocation();\r\n    const routesShowing = routes.filter((item) => !notShowMenu.includes(item.title));\r\n\r\n    return (\r\n        <div className=\"dashboard-header__menu-item-wrap\">\r\n            {\r\n                routesShowing.map((route, i) => (\r\n                    <div className=\"dashboard-header__menu-item\" key={route.title}>\r\n                        <Link \r\n                            className={`dashboard-header__menu-link ${isActiveURL(route.path, location.pathname) ? 'dashboard-header__menu-link--active disable-link' : ''}`}\r\n                            to={route.path}\r\n                        >\r\n                            {t(`menu.${route.title}`)}\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavItem;","import { FC, useContext } from 'react';\r\nimport NavWrapLanguage from '../wrap-language/NavWrapLanguage';\r\nimport NavItem from '../item/NavItem';\r\nimport { MarketsContext } from '../../../context/MarketsContext';\r\n\r\ninterface NavProps {\r\n    \r\n}\r\n\r\nconst Nav: FC<NavProps> = () => {\r\n    const { menuMobile } = useContext(MarketsContext);\r\n\r\n    return (\r\n        <nav className={\"header__menu menu\" + (menuMobile.menuMobile ? ' dashboard-header__menu--active' : '')}>\r\n            <div className=\"dashboard-header__menu-list\">\r\n                <NavItem />\r\n\r\n                <NavWrapLanguage />\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import { FC, useContext } from 'react';\r\nimport { AuthContext } from '../../../global/auth/context/AuthContext';\r\nimport Logo from \"../../../shared/logo/header/LogoHeader\";\r\nimport UserSelectorAdmin from '../../../shared/user-selector/UserSelectorAdmin';\r\nimport { MarketsContext } from '../../context/MarketsContext';\r\nimport Nav from \"../nav/nav/Nav\";\r\n\r\ninterface HeaderAdminProps {\r\n\r\n}\r\n\r\nconst HeaderAdmin: FC<HeaderAdminProps> = () => {\r\n    const { auth } = useContext(AuthContext);\r\n    const { menuMobile } = useContext(MarketsContext);\r\n\r\n    return (\r\n        <header className=\"page-header dashboard-header\">\r\n            <div className=\"dashboard-header__content\">\r\n                <Logo />\r\n            \r\n                <div className=\"dashboard-header__nav\">\r\n                    <Nav />\r\n                    \r\n                    {\r\n                        auth.isAuth() \r\n                        ?\r\n                            <div className=\"dashboard-header__user-menu-wrap\">\r\n                                <div className=\"dashboard-header__notify\"></div>\r\n                                <UserSelectorAdmin />\r\n                            </div>\r\n                        : ''\r\n                    }\r\n\r\n                    <button \r\n                        className=\"dashboard-header__menu-toggle\" \r\n                        type=\"button\" \r\n                        aria-label=\"mobile-menu\"\r\n                        onClick={menuMobile.toggleMenuMobile}\r\n                    >\r\n                        <span className=\"dashboard-header__menu-toggle-line\">\r\n                            <svg \r\n                                className=\"dashboard-header__menu-toggle-icon\" \r\n                                width=\"20\" \r\n                                height=\"20\"\r\n                            >\r\n                                <use xlinkHref=\"#menu-icon\"></use>\r\n                            </svg>\r\n                        </span>\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default HeaderAdmin;","import { FC } from 'react';\r\n\r\ninterface BarMarketProps {\r\n    title: string,\r\n}\r\n\r\nconst BarMarket: FC<BarMarketProps> = ({ title }) => {\r\n    return (\r\n        <div className=\"markets__topbar\">\r\n            <h1 className=\"markets__topbar-title\">{title}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarMarket;","import ICoin from \"../types/ICoin\"\r\n\r\nconst defaultCoin: () => ICoin = function () {\r\n    return {\r\n        \"id\": \"\",\r\n        \"symbol\": \"\",\r\n        \"name\": \"\",\r\n        \"image\": \"\",\r\n        \"current_price\": 0,\r\n        \"market_cap\": 0,\r\n        \"market_cap_rank\": 1,\r\n        \"fully_diluted_valuation\": 0,\r\n        \"total_volume\": 0,\r\n        \"high_24h\": 0,\r\n        \"low_24h\": 0,\r\n        \"price_change_24h\": 0,\r\n        \"price_change_percentage_24h\": 0,\r\n        \"market_cap_change_24h\": 0,\r\n        \"market_cap_change_percentage_24h\": 0,\r\n        \"circulating_supply\": 0,\r\n        \"total_supply\": 0,\r\n        \"max_supply\": 0,\r\n        \"ath\": 0,\r\n        \"ath_change_percentage\": 0,\r\n        \"ath_date\": \"\",\r\n        \"atl\": 0,\r\n        \"atl_change_percentage\": 0,\r\n        \"atl_date\": \"\",\r\n        \"roi\": null,\r\n        \"last_updated\": \"\"\r\n    }\r\n}\r\n\r\nexport default defaultCoin;","export const formatingPrice = (price: any, sign:string = '$'): string => {\r\n    const pieces = parseFloat(price).toFixed(2).split('')\r\n    let ii = pieces.length - 3\r\n    while ((ii-=3) > 0) {\r\n        pieces.splice(ii, 0, ',')\r\n    }\r\n\r\n    return pieces.join('') + ' ' + sign\r\n}\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport IUseRequest from '../../../../../../types/IUseRequest';\r\nimport { MarketMainContext } from '../../../context/MarketMainContext';\r\nimport { getCoinsMarkets } from '../../../../../../api/rest/CoinService';\r\nimport ICoin from '../../../../../../types/ICoin';\r\nimport defaultCoin from '../../../../../../helpers/coin';\r\n\r\ninterface IUseListCoins extends IUseRequest {\r\n    currency: string,\r\n    coin: ICoin,\r\n}\r\n\r\nconst useCoin = (coinId: string) : IUseListCoins  => {\r\n    const { currency } = useContext(MarketMainContext);\r\n    const [response, setResponse] = useState<AxiosResponse>();\r\n    const [error, setError] = useState<AxiosError>();\r\n    const [loading, setLoading] = useState(true);\r\n    const [coin, setCoin] = useState<ICoin>(defaultCoin());\r\n    const [useCurrency, setUseCurrency] = useState(currency.currency)\r\n\r\n    const fetchData = async (params: AxiosRequestConfig) => {\r\n        try {\r\n            const result = await axios.request(params);\r\n            setResponse(result);\r\n            setCoin(result.data[0]);\r\n        } catch (err: any) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n            setUseCurrency(currency.currency);\r\n        }\r\n    };\r\n\r\n    const sendData = async (params: AxiosRequestConfig) => {\r\n        await fetchData(params);\r\n    }\r\n\r\n    useEffect(() => {\r\n        sendData(getCoinsMarkets({ \r\n            vs_currency: currency.currency, \r\n            ids: coinId\r\n        }))\r\n    }, [currency.currency]);\r\n\r\n    return { \r\n        response: response,\r\n        error: error,\r\n        loading: loading,\r\n        sendData: sendData,\r\n        currency: useCurrency,\r\n        coin: coin,\r\n    };\r\n}\r\n\r\nexport default useCoin;","import { FC, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport defaultCoin from '../../../../../helpers/coin';\r\nimport { getColorClass, getColor } from '../../../../../helpers/colors';\r\nimport { signCurrency } from '../../../../../helpers/currencies';\r\nimport { formatingPrice } from '../../../../../helpers/formating';\r\nimport ICoin from '../../../../../types/ICoin';\r\nimport Loader from '../../../../shared/loader/Loader';\r\nimport CoinChart from '../../chart/CoinChart';\r\nimport useCoin from './hooks/useCoin';\r\n\r\ninterface CardMarketItemProps {\r\n    coinId: string,\r\n}\r\n\r\nconst CardMarketItem: FC<CardMarketItemProps> = ( { coinId } ) => {\r\n    const { t } = useTranslation();\r\n    const { coin, loading, currency } = useCoin(coinId);\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const coinCurrent: ICoin = useMemo(() => {\r\n        if (loading) {\r\n            const timeout = setTimeout(() => {\r\n                setIsLoading(true);\r\n                clearTimeout(timeout);\r\n            }, 1500);\r\n\r\n            return defaultCoin();\r\n        }\r\n\r\n        const timeout = setTimeout(() => {\r\n            setIsLoading(false);\r\n            clearTimeout(timeout);\r\n        }, 1500);\r\n\r\n        return coin;\r\n    }, [coin, loading])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading\r\n                ? <Loader isRevert={true} style={{ height: '24px', width: '24px' }} />\r\n                : <div className=\"markets__card\">\r\n                    <div className=\"markets__card-title\">\r\n                        {coinCurrent?.name}\r\n                    </div>\r\n                    <div className=\"markets__card-picture\">\r\n                        <CoinChart\r\n                            coinId={coinCurrent.id} \r\n                            color={getColor(coinCurrent.price_change_24h)} \r\n                            width={105} \r\n                            height={55}\r\n                        />\r\n                    </div>\r\n                    <div className=\"markets__card-bet\">\r\n                        <span \r\n                            className={getColorClass(coinCurrent.price_change_24h)}\r\n                        >\r\n                            {formatingPrice(coinCurrent.current_price, signCurrency[currency])}\r\n                        </span> \r\n                        { coinCurrent.price_change_24h < 0 \r\n                            ? formatingPrice((coinCurrent.current_price + coinCurrent.price_change_24h).toFixed(2), signCurrency[currency]) \r\n                            : formatingPrice((coinCurrent.current_price - coinCurrent.price_change_24h).toFixed(2), signCurrency[currency])\r\n                        }\r\n                    </div>\r\n                    <div className=\"markets__card-sum\">\r\n                        <span \r\n                            className={getColorClass(coinCurrent.price_change_percentage_24h)}\r\n                        >\r\n                            {formatingPrice(coinCurrent.price_change_percentage_24h.toFixed(2), '%')}\r\n                        </span> \r\n                        { t('markets.card.market-cap')}: {formatingPrice(coinCurrent.market_cap, signCurrency[currency])}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default CardMarketItem;\r\n","import { FC, useContext, useMemo, useState } from 'react';\r\nimport { MarketMainContext } from '../../context/MarketMainContext';\r\nimport CardMarketItem from '../item/CardMarketItem';\r\n\r\ninterface CardMarketListProps {\r\n\r\n}\r\n\r\nconst CardMarketList: FC<CardMarketListProps> = () => {\r\n    const { coins } = useContext(MarketMainContext);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"markets__card-list\">\r\n            {\r\n                coins.list.length > 0\r\n                    && coins.list.map((coin: string) => (\r\n                            <CardMarketItem key={coin} coinId={coin} />\r\n                        ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardMarketList;","import { FC, useContext, useState } from 'react';\r\nimport ICoin from '../../../../../types/ICoin';\r\nimport { MarketMainContext } from '../../context/MarketMainContext';\r\n\r\ninterface ThStarProps {\r\n    coin: ICoin\r\n}\r\n\r\nconst DEFAULT_CLASS: string = 'col-favourites-icon';\r\nconst ACTIVE_CLASS: string = 'col-favourites-icon--active';\r\n\r\nconst ThStar: FC<ThStarProps> = ({ coin }) => {\r\n    const { coins } = useContext(MarketMainContext);\r\n    const [classes, setClasses] = useState(coins.list.filter((item) => (item === coin.id)).length ? DEFAULT_CLASS + \" \" +  ACTIVE_CLASS : DEFAULT_CLASS);\r\n\r\n    const handleClasses = () => {\r\n        if (DEFAULT_CLASS === classes) {\r\n            setClasses(DEFAULT_CLASS + \" \" +  ACTIVE_CLASS);\r\n            coins.addCoin(coin.id);\r\n        } else {\r\n            setClasses(DEFAULT_CLASS);\r\n            coins.removeCoin(coin.id);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"col-favourites\">\r\n            <div className=\"col-favourites-img\">\r\n                <svg className={classes} onClick={handleClasses} width=\"14\" height=\"14\">\r\n                    <use xlinkHref=\"#star-icon\"></use>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThStar;","import { FC, useContext, useEffect, useMemo, useState } from 'react';\r\nimport DataTable, { TableColumn } from 'react-data-table-component';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getColor, getColorClass } from '../../../../helpers/colors';\r\nimport useRequest from '../../../../hooks/useRequest';\r\nimport ICoin from '../../../../types/ICoin';\r\nimport CoinChart from '../chart/CoinChart';\r\nimport ThStar from './th-star/ThStar';\r\nimport { getCoinsMarkets, ICoinsMarkets } from '../../../../api/rest/CoinService';\r\nimport { MarketMainContext } from '../context/MarketMainContext';\r\nimport { formatingPrice } from '../../../../helpers/formating';\r\nimport { signCurrency } from '../../../../helpers/currencies';\r\nimport Loader from '../../../shared/loader/Loader';\r\n\r\ninterface RowTable extends ICoin {\r\n    chart?: string,\r\n}\r\n\r\ninterface TableProps {\r\n\r\n}\r\n\r\nconst Table: FC<TableProps> = () => {\r\n    const { t } = useTranslation();\r\n    const { currency, filters, platforms } = useContext(MarketMainContext);\r\n    const [useCurrency, setUseCurrency] = useState(currency.currency);\r\n\r\n    let defaultParams: ICoinsMarkets = { vs_currency: currency.currency };\r\n    if (filters.list.hasOwnProperty('category') && filters.list.category) {\r\n        defaultParams = { ...defaultParams, category: filters.list.category };\r\n    }\r\n\r\n    const config = getCoinsMarkets(defaultParams);\r\n    const { response, sendData, loading }  = useRequest(config);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    \r\n    const values = useMemo(() => {\r\n        setIsLoading(true);\r\n\r\n        let data = response?.data ? [...response.data] : [];\r\n        if (Object.keys(filters.list).length) {\r\n            if (filters.list.hasOwnProperty('search') && filters.list.search) {\r\n                data = data.filter(coin => (coin.name.toLowerCase().includes(filters.list?.search?.toLowerCase())));\r\n            }\r\n\r\n            if (filters.list.hasOwnProperty('platform') && filters.list.platform) {\r\n                const keyPlatform: string = platforms.list.hasOwnProperty(filters.list.platform) ? filters.list.platform : '';\r\n                data = data.filter(coin => (platforms.list[keyPlatform]?.includes(' ' + coin.id.toLowerCase() + ',')));\r\n            }\r\n\r\n            if (filters.list.isFavorite) {\r\n                data = data.filter(\r\n                    (coin) => (\r\n                        filters.list.coins?.split(',')?.filter((coinFilter) => (\r\n                            coin.id.toLowerCase() === coinFilter.toLowerCase()\r\n                        )\r\n                    ).length)\r\n                );\r\n            }\r\n\r\n            if (filters.list.hasOwnProperty('lastPrice') && filters.list?.lastPrice) {\r\n                if (filters.list.lastPrice.includes('Up')) {\r\n                    data = data.filter((coin) => (coin.price_change_24h > 0));\r\n                } else if (filters.list.lastPrice.includes('Down')) {\r\n                    data = data.filter((coin) => (coin.price_change_24h < 0));\r\n                }\r\n            }\r\n        }\r\n\r\n        setUseCurrency(currency.currency);\r\n\r\n        const timeout = setTimeout(() => {\r\n            setIsLoading(false);\r\n            clearTimeout(timeout);\r\n        }, 1500);\r\n\r\n        return data;\r\n    }, [response, filters.list, platforms.list]);\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            if (filters.list.hasOwnProperty('category') && filters.list.category) {\r\n                sendData(getCoinsMarkets({ ...defaultParams, category: filters.list.category }));\r\n            } else {\r\n                sendData(getCoinsMarkets(defaultParams));\r\n            }\r\n        }\r\n    }, [currency.currency, filters.list]);\r\n\r\n    const columns:  TableColumn<RowTable>[]  = [\r\n        {\r\n            id: 'name',\r\n            name: t('markets.columns.name'),\r\n            selector: row => row.name.toLowerCase(),\r\n            format: (row, index) => (row.name),\r\n            cell: (row) => (\r\n                <div className=\"col-favourites\">\r\n                        <ThStar coin={row} />\r\n                        <img src={row.image} width='40px' height='40px' style={{marginRight: '10px'}} alt={row.id} />\r\n                    <p className=\"col-info\">{row.name}</p>\r\n                </div>\r\n            ),\r\n            sortable: true,\r\n            minWidth: '25%',\r\n            maxWidth: '40%'\r\n        },\r\n        {\r\n            id: 'current_price',\r\n            name: t('markets.columns.last-price'),\r\n            selector: row => row.current_price,\r\n            cell: (row) => (\r\n                <p className=\"col-info\">\r\n                    <span className={`${getColorClass(row.price_change_24h)} white-space-text`}>{formatingPrice(row.current_price, signCurrency[useCurrency])}</span>\r\n                </p>\r\n            ),\r\n            sortable: true,\r\n        },\r\n        {\r\n            id: 'price_change_percentage_24h',\r\n            name: t('markets.columns.24h-сhange'),\r\n            selector: row => row.price_change_percentage_24h,\r\n            cell: (row) => (\r\n                <p className=\"col-info\">\r\n                    <span className={`${getColorClass(row.price_change_percentage_24h)} white-space-text`}>{row.price_change_percentage_24h} %</span>\r\n                </p>\r\n            ),\r\n            sortable: true,\r\n        },\r\n        {\r\n            id: 'high_24h',\r\n            name: t('markets.columns.24h-high'),\r\n            selector: row => row.high_24h,\r\n            cell: (row) => (\r\n                <p className=\"col-info\">\r\n                    <span className={`${getColorClass(row.high_24h)} white-space-text`}>{formatingPrice(row.high_24h, signCurrency[useCurrency])}</span>\r\n                </p>\r\n            ),\r\n            sortable: true,\r\n        },\r\n        {\r\n            id: 'low_24h',\r\n            name: t('markets.columns.24h-low'),\r\n            selector: row => row.low_24h,\r\n            cell: (row) => (\r\n                <p className=\"col-info\">\r\n                    <span className={`${getColorClass(row.low_24h)} white-space-text`}>{formatingPrice(row.low_24h, signCurrency[useCurrency])}</span>\r\n                </p>\r\n            ),\r\n            sortable: true,\r\n        },\r\n        {\r\n            id: 'market_cap',\r\n            name: t('markets.columns.market-cap'),\r\n            selector: row => row.market_cap,\r\n            cell: (row) => (<span className=\"white-space-text\">{formatingPrice(row.market_cap, signCurrency[useCurrency])}</span>),\r\n            sortable: true,\r\n        },\r\n        {\r\n            id: 'total_volume',\r\n            name: t('markets.columns.24h-volume'),\r\n            selector: row => row.total_volume,\r\n            cell: (row) => (<span className=\"white-space-text\">{formatingPrice(row.total_volume, signCurrency[useCurrency])}</span>),\r\n            sortable: true,\r\n        },\r\n        {\r\n            id: 'chart',\r\n            name: \"\",\r\n            cell: (row) => (\r\n                <CoinChart coinId={row.id} color={getColor(row.price_change_percentage_24h)} width={140} height={70} />\r\n            ),\r\n            sortable: false,\r\n        },\r\n    ];\r\n    \r\n    function handlerChangePage(page: any) {\r\n        filters.addFilter({...filters.list, page: page})\r\n    }\r\n\r\n    function handlerChangeRowsPerPage(currentRowsPerPage: any) {\r\n        filters.addFilter({...filters.list, perPage: currentRowsPerPage})\r\n    }\r\n\r\n    return (\r\n        <DataTable\r\n            className=\"markets__table table\"\r\n            noDataComponent={t('landing.market-info.table-have-not-data')}\r\n            columns={columns}\r\n            data={values}\r\n            progressPending={isLoading}\r\n            progressComponent={<Loader />}\r\n            onChangePage={handlerChangePage}\r\n            onChangeRowsPerPage={handlerChangeRowsPerPage}\r\n            paginationPerPage={filters.list.perPage}\r\n            paginationDefaultPage={filters.list.page}\r\n            pagination\r\n        />\r\n    )\r\n}\r\n\r\nexport default Table;","import { FC, useContext, useState } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { MarketMainContext } from '../../context/MarketMainContext';\r\n\r\ninterface SearchProps {\r\n\r\n}\r\n\r\nconst Search: FC<SearchProps> = () => {\r\n    const { filters } = useContext(MarketMainContext);\r\n    const { t } = useTranslation();\r\n    const [search, setSearch] = useState(filters.list.search);\r\n\r\n    function handleSearchButtonClick (e: any) {\r\n        e.preventDefault();\r\n        filters.addFilter( { search: search } );\r\n    }\r\n\r\n    function handlerChangeSearch (e: any) {\r\n        setSearch(e.target.value)\r\n        filters.addFilter( { search: e.target.value } );\r\n    }\r\n\r\n    return (\r\n        <div className=\"markets__search\">\r\n            <input \r\n                className=\"markets__search-input\" \r\n                value={search} \r\n                onChange={handlerChangeSearch} \r\n                type=\"text\" \r\n                placeholder={t('markets.filters.search')}\r\n            />\r\n            <button className=\"markets__search-img\" type=\"button\" aria-label=\"search button\" onClick={handleSearchButtonClick}>\r\n                <svg className=\"markets__search-icon\" width=\"12\" height=\"12\">\r\n                    <use xlinkHref=\"#search-icon\"></use>\r\n                </svg>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import { baseUrlApi } from './../../env';\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\nconst url = `${baseUrlApi}/coins/categories`;\r\n\r\nexport const getList: () => AxiosRequestConfig = () => {\r\n    return {\r\n        url: `${url}/list`,\r\n        method: 'GET',\r\n        params: []\r\n    }\r\n}\r\n","import { FC, useContext, useMemo, useState } from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { GroupBase, StylesConfig } from 'react-select';\r\nimport { getList } from '../../../../../api/rest/CategoryService';\r\nimport useRequest from '../../../../../hooks/useRequest';\r\nimport ISelect from '../../../../../types/ISelect';\r\nimport Loader from '../../../../shared/loader/Loader';\r\nimport SelectCore from '../../../../shared/select/core/SelectCore';\r\nimport { MarketMainContext } from '../../context/MarketMainContext';\r\n\r\ninterface CategoryProps {\r\n\r\n}\r\n\r\nconst Category: FC<CategoryProps> = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const { i18n, t } = useTranslation();\r\n    const { filters } = useContext(MarketMainContext);\r\n    const { response } = useRequest(getList());\r\n    const [selected, setSelected] = useState<ISelect>({\r\n        label: t('markets.filters.select-category'),\r\n        value: 0\r\n    });\r\n\r\n    const valuesSelect = useMemo(() => {\r\n        setLoading(false);\r\n\r\n        let selectList: ISelect[] = [{\r\n            label: t('markets.filters.select-category'),\r\n            value: 0\r\n        }];\r\n\r\n        if (response?.data) {\r\n            response.data.forEach((item: any) => {\r\n                selectList.push({\r\n                    value: item.category_id,\r\n                    label: item.name\r\n                });\r\n            });\r\n        }\r\n        setSelected(filters.list.category ? selectList.filter((item) => (item.value === filters.list.category))[0] : selectList.filter((item) => (item.value === selected.value))[0]);\r\n\r\n        const timeout = setTimeout(() => {\r\n            setLoading(true);\r\n            clearTimeout(timeout);\r\n        }, 1500);\r\n\r\n        return selectList;\r\n    }, [response, i18n.language]);\r\n\r\n    function handlerChangeSelect(e: any) {\r\n        setSelected(e);\r\n        filters.addFilter({ category: e.value });\r\n    }\r\n\r\n    const customStyles: StylesConfig<ISelect, false, GroupBase<ISelect>> = {\r\n        option: () => ({\r\n            padding: '5px',\r\n            borderLeft: '3px solid transparent',\r\n            textAlign: 'left',\r\n            transition: 'color .3s, border .3s',\r\n            width: '100%',\r\n            \":hover\": {\r\n                borderLeft: '3px solid #24ac80',\r\n            },\r\n        }),\r\n        control: () => ({\r\n            width: '200px',\r\n            display: 'flex',\r\n            padding: '0px 0px 0px 0px',\r\n        }),\r\n        menuList: () => ({\r\n            backgroundColor: 'rgba(var(--select-bg-color), 1)',\r\n            border: '1px solid rgba(var(--primary-color),.05)',\r\n            maxHeight: '15rem',\r\n            overflowY: 'auto',\r\n            scrollbarWidth: 'thin'\r\n        }),\r\n        valueContainer: (provided, state) => ({\r\n            ...provided,\r\n            paddingLeft: '5px',\r\n            textAlign: 'left',\r\n        }),\r\n        dropdownIndicator: (provided, state) => ({\r\n            transition: 'all .2s',\r\n            transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : 'none',\r\n            padding: '5px'\r\n        }),\r\n        singleValue: (provided, state) => {\r\n            const opacity = state.isDisabled ? 0.5 : 1;\r\n            const transition = 'opacity 300ms';\r\n            return { ...provided, opacity, transition };\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SelectCore\r\n            styles={customStyles}\r\n            values={valuesSelect}\r\n            selected={selected}\r\n            onChange={handlerChangeSelect}\r\n            components={{\r\n                IndicatorSeparator: () => null\r\n            }}\r\n            isDisabled={!loading}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Category;","import { FC, useState, useContext } from 'react';\r\nimport { GroupBase, StylesConfig } from 'react-select';\r\nimport { selectCurrency, getSelectedDefaultCurrency } from '../../../../../helpers/currencies';\r\nimport ISelect from '../../../../../types/ISelect';\r\nimport SelectCore from '../../../../shared/select/core/SelectCore';\r\nimport { MarketMainContext } from '../../context/MarketMainContext';\r\n\r\ninterface CurrencyProps {\r\n\r\n}\r\n\r\nconst Currency: FC<CurrencyProps> = () => {\r\n    const { currency, filters } = useContext(MarketMainContext);\r\n    const [selectedCurrency, setSelectedCurrency] = useState(getSelectedDefaultCurrency(currency.currency));\r\n\r\n    function handlerChangeCurrency(e: any): void {\r\n        currency.changeCurrency(e.value);\r\n        filters.addFilter({ currency: e.value })\r\n        setSelectedCurrency(e);\r\n    }\r\n\r\n    const customStyles: StylesConfig<ISelect, false, GroupBase<ISelect>> = {\r\n        option: (provided, state) => ({\r\n            padding: '5px',\r\n            borderLeft: '3px solid transparent',\r\n            textAlign: 'left',\r\n            transition: 'color .3s, border .3s',\r\n            width: '100%',\r\n            \":hover\": {\r\n                borderLeft: '3px solid #24ac80',\r\n            },\r\n        }),\r\n        control: () => ({\r\n            width: '100px',\r\n            display: 'flex',\r\n            padding: '0px 0px 0px 0px',\r\n        }),\r\n        menuList: () => ({\r\n            backgroundColor: 'rgba(var(--select-bg-color), 1)',\r\n            border: '1px solid rgba(var(--primary-color),.05)',\r\n            maxHeight: '15rem',\r\n            overflowY: 'auto',\r\n            scrollbarWidth: 'thin',\r\n        }),\r\n        valueContainer: (provided, state) => ({\r\n            ...provided,\r\n            paddingLeft: '5px',\r\n            textAlign: 'left',\r\n        }),\r\n        dropdownIndicator: (provided, state) => ({\r\n            transition: 'all .2s',\r\n            transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : 'none',\r\n            padding: '5px'\r\n        }),\r\n        singleValue: (provided, state) => {\r\n            const opacity = state.isDisabled ? 0.5 : 1;\r\n            const transition = 'opacity 300ms';\r\n            return { ...provided, opacity, transition };\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SelectCore\r\n            styles={customStyles}\r\n            values={selectCurrency}\r\n            selected={selectedCurrency}\r\n            onChange={handlerChangeCurrency}\r\n            components={{\r\n                IndicatorSeparator: () => null\r\n            }}\r\n            isSearchable={false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Currency;","import { useState, useMemo, FC, useContext } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport SelectCore from '../../../../shared/select/core/SelectCore';\r\nimport ISelect from '../../../../../types/ISelect';\r\nimport { MarketMainContext } from '../../context/MarketMainContext';\r\nimport Loader from '../../../../shared/loader/Loader';\r\nimport { GroupBase, StylesConfig } from 'react-select';\r\n\r\ninterface PlatformProps {\r\n\r\n}\r\n\r\nconst Platform: FC<PlatformProps> = () => {\r\n    const { t, i18n } = useTranslation();\r\n    const { platforms, filters } = useContext(MarketMainContext);\r\n    const [value, setValue] = useState<ISelect>({\r\n        label: t('markets.filters.select-platform'),\r\n        value: 0\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const values = useMemo(() => {\r\n        setLoading(false);\r\n\r\n        if (Object.keys(platforms.list).length < 2) {\r\n            return [{\r\n                label: t('markets.filters.select-platform'),\r\n                value: 0\r\n            }];\r\n        }\r\n\r\n        let key = Object.keys(platforms.list);\r\n        let array: ISelect[] = [];\r\n\r\n        key.forEach((item) => {\r\n            let label = item.replaceAll('-', ' ');\r\n            label = label.charAt(0).toUpperCase() + label.slice(1);\r\n\r\n            array.push({\r\n                label: label,\r\n                value: item,\r\n            });\r\n        });\r\n\r\n        const result = [{\r\n            label: t('markets.filters.select-platform'),\r\n            value: 0\r\n        }, ...array];\r\n\r\n        setValue(filters.list.platform ? result.filter((item) => (item.value === filters.list.platform))[0] : result.filter((item) => (item.value === value.value))[0]);\r\n\r\n        const timeout = setTimeout(() => {\r\n            setLoading(true);\r\n            clearTimeout(timeout);\r\n        }, 1500);\r\n\r\n        return result;\r\n    }, [platforms.list, i18n.language])\r\n\r\n    function handlerFilterMarket(e: any): void {\r\n        setValue(e);\r\n        filters.addFilter({ platform: e.value });\r\n    }\r\n\r\n    const customStyles: StylesConfig<ISelect, false, GroupBase<ISelect>> = {\r\n        option: (provided, state) => ({\r\n            padding: '5px',\r\n            borderLeft: '3px solid transparent',\r\n            textAlign: 'left',\r\n            transition: 'color .3s, border .3s',\r\n            width: '100%',\r\n            \":hover\": {\r\n                borderLeft: '3px solid #24ac80',\r\n            },\r\n        }),\r\n        control: () => ({\r\n            width: '200px',\r\n            display: 'flex',\r\n            padding: '0px 0px 0px 0px',\r\n        }),\r\n        menuList: () => ({\r\n            backgroundColor: 'rgba(var(--select-bg-color), 1)',\r\n            border: '1px solid rgba(var(--primary-color),.05)',\r\n            maxHeight: '15rem',\r\n            overflowY: 'auto',\r\n            scrollbarWidth: 'thin'\r\n        }),\r\n        valueContainer: (provided, state) => ({\r\n            ...provided,\r\n            paddingLeft: '5px',\r\n            textAlign: 'left',\r\n        }),\r\n        dropdownIndicator: (provided, state) => ({\r\n            transition: 'all .2s',\r\n            transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : 'none',\r\n            padding: '5px'\r\n        }),\r\n        singleValue: (provided, state) => {\r\n            const opacity = state.isDisabled ? 0.5 : 1;\r\n            const transition = 'opacity 300ms';\r\n            return { ...provided, opacity, transition };\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SelectCore\r\n            styles={customStyles}\r\n            selected={value}\r\n            values={values}\r\n            onChange={handlerFilterMarket}\r\n            components={{\r\n                IndicatorSeparator: () => null\r\n            }}\r\n            isDisabled={!loading}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Platform;\r\n","import { FC, useContext, useEffect, useState } from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { GroupBase, StylesConfig } from 'react-select';\r\nimport ISelect from '../../../../../types/ISelect';\r\nimport SelectCore from '../../../../shared/select/core/SelectCore';\r\nimport { MarketMainContext } from '../../context/MarketMainContext';\r\n\r\ninterface PriceProps {\r\n\r\n}\r\n\r\nconst Price: FC<PriceProps> = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const { filters } = useContext(MarketMainContext);\r\n    const { t, i18n } = useTranslation();\r\n    const [items, setItems] = useState([\r\n        {\r\n            value: '',\r\n            label: t('markets.filters.price.select-last-price'),\r\n        },\r\n        {\r\n            value: 'Last Price Down',\r\n            label: t('markets.filters.price.last-price-down'),\r\n        },\r\n        {\r\n            value: 'Last Price Up',\r\n            label: t('markets.filters.price.last-price-up'),\r\n        }\r\n    ]);\r\n    const [value, setValue] = useState(filters.list.lastPrice ? items.filter((item) => (filters.list.lastPrice === item.value))[0]  : items[0]);\r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n\r\n        const items = [\r\n            {\r\n                value: '',\r\n                label: t('markets.filters.price.select-last-price'),\r\n            },\r\n            {\r\n                value: 'Last Price Down',\r\n                label: t('markets.filters.price.last-price-down'),\r\n            },\r\n            {\r\n                value: 'Last Price Up',\r\n                label: t('markets.filters.price.last-price-up'),\r\n            }\r\n        ];\r\n\r\n        setItems(items);\r\n\r\n        const timeout = setTimeout(() => {\r\n            setValue(items.filter((item) => (item.value === value.value))[0]);\r\n\r\n            setLoading(true);\r\n            clearTimeout(timeout);\r\n        }, 1500);\r\n    }, [i18n.language])\r\n\r\n\r\n    function handlerFilterMarket(e: any): void {\r\n        setValue(e);\r\n        filters.addFilter({ lastPrice: e.value });\r\n    }\r\n\r\n    //Тестовый конфиг для кастомного Select\r\n    const customStyles: StylesConfig<ISelect, false, GroupBase<ISelect>> = {\r\n        option: (provided, state) => ({\r\n            padding: '5px',\r\n            borderLeft: '3px solid transparent',\r\n            textAlign: 'left',\r\n            transition: 'color .3s, border .3s',\r\n            width: '100%',\r\n            \":hover\": {\r\n                borderLeft: '3px solid #24ac80',\r\n            },\r\n        }),\r\n        control: () => ({\r\n            width: '200px',\r\n            display: 'flex',\r\n            padding: '0px 0px 0px 0px',\r\n        }),\r\n        menuList: () => ({\r\n            backgroundColor: 'rgba(var(--select-bg-color), 1)',\r\n            border: '1px solid rgba(var(--primary-color),.05)',\r\n            maxHeight: '15rem',\r\n            overflowY: 'auto',\r\n            scrollbarWidth: 'thin'\r\n        }),\r\n        valueContainer: (provided, state) => ({\r\n            ...provided,\r\n            paddingLeft: '5px',\r\n            textAlign: 'left',\r\n        }),\r\n        dropdownIndicator: (provided, state) => ({\r\n            transition: 'all .2s',\r\n            transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : 'none',\r\n            padding: '5px'\r\n        }),\r\n        singleValue: (provided, state) => {\r\n            const opacity = state.isDisabled ? 0.5 : 1;\r\n            const transition = 'opacity 300ms';\r\n            return { ...provided, opacity, transition };\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SelectCore\r\n            isSearchable={false}\r\n            selected={value}\r\n            values={items}\r\n            onChange={handlerFilterMarket}\r\n            styles={customStyles}\r\n            components={{\r\n                IndicatorSeparator: () => null\r\n            }}\r\n            isDisabled={!loading}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Price;","import { FC } from 'react';\r\nimport Category from '../category/Category';\r\nimport Currency from '../currency/Сurrency';\r\nimport Platform from '../platform/Platform';\r\nimport Price from '../price/Price';\r\n\r\ninterface Filters {\r\n    data?: FiltersData,\r\n    key: string,\r\n    component: FC\r\n}\r\n\r\ninterface FiltersData {\r\n    \r\n}\r\n\r\nconst filters: Filters[] = [\r\n    {\r\n        component: Platform,\r\n        key: 'platform'\r\n    },\r\n    {\r\n        component: Price,\r\n        key: 'price'\r\n    },\r\n    {\r\n        component: Category,\r\n        key: 'category'\r\n    },\r\n    {\r\n        component: Currency,\r\n        key: 'currency'\r\n    }\r\n];\r\n\r\nexport default filters;","import { FC } from 'react';\r\nimport Favorite from './favorite/Favorite';\r\nimport Search from './search/Search';\r\nimport filters from './data/filters';\r\n\r\ninterface FiltersPageMarketProps {\r\n\r\n}\r\n\r\nconst FiltersPageMarket: FC<FiltersPageMarketProps> = () => {\r\n    return (\r\n        <>\r\n            <div className=\"markets__table-head-row\">\r\n                {\r\n                    filters.length &&\r\n                    <ul className=\"markets__filters-list\">\r\n                        {\r\n                            filters.map((item) => (\r\n                                <li className=\"markets__filters-item\" key={item.key}>\r\n                                    <item.component />\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                }\r\n                <Favorite />\r\n\r\n                <Search />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FiltersPageMarket;","import { useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nconst useCoins = (addFiltersMarkets: any) => {\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const [coinsList, setCoinsList] = useState<string[]>(searchParams.get('coins')?.split(',') ?? []);\r\n\r\n    const removeCoin = (coinId: string) => {\r\n        addFiltersMarkets({\r\n            coins: coinsList.filter((item: string) => item !== coinId).join(',')\r\n        })\r\n\r\n        setCoinsList(coinsList.filter((item: string) => item !== coinId));\r\n    }\r\n    \r\n    const addCoin = (coin: string) => {\r\n        addFiltersMarkets({\r\n            coins: [...coinsList, coin].join(',')\r\n        })\r\n\r\n        setCoinsList([...coinsList, coin]);\r\n    }\r\n\r\n    return {coinsList, removeCoin, addCoin}\r\n}\r\n\r\nexport default useCoins;","export const getAllQueryParams = (fieldInArray: string[] = []) => {\r\n    const query = new URLSearchParams(window.location.search);\r\n    const params: any = {};\r\n\r\n    query.forEach((value, key) => {\r\n        if (params[key]) {\r\n            if (typeof params[key] === 'string') {\r\n                params[key] = [params[key], value];\r\n            } else {\r\n                params[key] = [...params[key], value];\r\n            }\r\n        } else {\r\n            if (fieldInArray.includes(key)) {\r\n                params[key] = [value];\r\n            } else {\r\n                params[key] = value;\r\n            }\r\n        }\r\n    })\r\n\r\n    return params;\r\n}","import { getAllQueryParams } from './../../../../helpers/queryRoute';\r\nimport { useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { MarketTableFiltersState } from '../context/MarketMainContext';\r\n\r\nconst useFilters = () => {\r\n    const allQueryParams = getAllQueryParams();\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [filtersMarkets, setFiltersMarkets] = useState<MarketTableFiltersState>({\r\n        category: '',\r\n        search: '',\r\n        platform: '',\r\n        coins: '',\r\n        lastPrice: '',\r\n        page: undefined,\r\n        perPage: undefined,\r\n        isFavorite: false,\r\n        currency: '',\r\n        ...allQueryParams\r\n    });\r\n\r\n    const addFiltersMarkets = (filters: any) => {\r\n        const newFilters = {...filtersMarkets, ...getAllQueryParams(), ...filters};\r\n        setFiltersMarkets({...filtersMarkets, ...getAllQueryParams(), ...filters});\r\n        \r\n        setSearchParams(JSON.parse(JSON.stringify(newFilters, function replaceUndefinedOrNull(key, value) {\r\n            if (!value) {\r\n                return undefined;\r\n            }\r\n\r\n            return value;\r\n        })));\r\n    }\r\n\r\n    return { filtersMarkets, addFiltersMarkets }\r\n}\r\n\r\nexport default useFilters;","import { useEffect, useState } from 'react';\r\nimport { getCoinsList } from '../../../../api/rest/CoinService';\r\nimport useRequest from '../../../../hooks/useRequest';\r\nimport ISelect from '../../../../types/ISelect';\r\nimport { CoinPlatformsState } from '../context/MarketMainContext';\r\n\r\nconst usePlatforms = () => {\r\n    const [platforms, setPlatforms] = useState<CoinPlatformsState>({});\r\n    const  addPlatform = (newPlatforms: any) => {\r\n        setPlatforms({...platforms, ...newPlatforms});\r\n    }\r\n\r\n    const params = getCoinsList(\r\n        {\r\n            include_platform: true,\r\n        }\r\n    );\r\n    const { response } = useRequest(params);\r\n\r\n    useEffect(() => {\r\n        let platformsResponse = response?.data;\r\n        if (platformsResponse) {\r\n            let platforms: ISelect[] = [];\r\n            let platformKeys: any[] = [];\r\n            let platformValues: any = {};\r\n\r\n            platformsResponse.forEach((item: any) => {\r\n                const keys = Object.keys(item?.platforms);\r\n\r\n                if (!keys.length) {\r\n                    return;\r\n                }\r\n\r\n                keys.forEach((key:string) => {\r\n                    if (!key) {\r\n                        return;\r\n                    }\r\n\r\n                    const formatKey:string = key.toLowerCase();\r\n\r\n                    if (platformKeys.includes(formatKey)) {\r\n                        platformValues[formatKey].push(item.id.toLowerCase());\r\n                    } else {\r\n                        platformKeys.push(formatKey);\r\n                        platformValues[formatKey] = [item.id.toLowerCase()];\r\n                    }\r\n                });\r\n            });\r\n\r\n            platformKeys.forEach((key) => {\r\n                platforms.push({ label: key, value: key.toLowerCase() })\r\n                platformValues[key.toLowerCase()] = platformValues[key.toLowerCase()].join(', ');\r\n            })\r\n\r\n            setPlatforms(platformValues);\r\n        }\r\n    }, [response]);\r\n\r\n    return {platforms, addPlatform}\r\n}\r\n\r\nexport default usePlatforms;","import { useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { getCurrency } from '../../../../helpers/currencies';\r\nimport { getAllQueryParams } from './../../../../helpers/queryRoute';\r\n\r\nconst useCurrency = () => {\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [currency, setCurrency] = useState<string>(getCurrency());\r\n\r\n    const changeCurrency = (currency: string) => {\r\n        if (currency) {\r\n            setCurrency(currency);\r\n\r\n            let newSearchParams = { ...getAllQueryParams(), currency: currency };\r\n            setSearchParams(JSON.parse(JSON.stringify(newSearchParams, function replaceUndefinedOrNull(key, value) {\r\n                if (!value) {\r\n                    return undefined;\r\n                }\r\n\r\n                return value;\r\n            })))\r\n        }\r\n    }\r\n\r\n    return { currency, changeCurrency }\r\n}\r\n\r\nexport default useCurrency;","import { FC } from 'react';\r\nimport BarMarket from './bar/BarMarket';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardMarketList from './card/list/CardMarketList';\r\nimport Table from './table/Table';\r\nimport FiltersPageMarket from './filters/FiltersPageMarket';\r\nimport { MarketMainContext } from './context/MarketMainContext';\r\nimport useCoins from './hooks/useCoins';\r\nimport useFilters from './hooks/useFilters';\r\nimport usePlatforms from './hooks/usePlatforms';\r\nimport useCurrency from './hooks/useCurrency';\r\n\r\ninterface MarketMainProps {\r\n\r\n}\r\n\r\nconst MarketMain: FC<MarketMainProps> = () => {\r\n    const { t } = useTranslation();\r\n    const { filtersMarkets, addFiltersMarkets } = useFilters();\r\n    const { coinsList, removeCoin, addCoin } = useCoins(addFiltersMarkets);\r\n    const { platforms, addPlatform } = usePlatforms();\r\n    const { currency, changeCurrency } = useCurrency();\r\n    \r\n    return (\r\n        <main className='page-main'>\r\n            <MarketMainContext.Provider value={{\r\n                platforms: {\r\n                    list: platforms,\r\n                    addPlatform: addPlatform\r\n                },\r\n                filters: {\r\n                    list: filtersMarkets,\r\n                    addFilter: addFiltersMarkets\r\n                },\r\n                coins: {\r\n                    list: coinsList,\r\n                    removeCoin: removeCoin,\r\n                    addCoin: addCoin\r\n                },\r\n                currency: {\r\n                    currency: currency,\r\n                    changeCurrency: changeCurrency,\r\n                }\r\n            }} >\r\n                <section className=\"markets\">\r\n                    <BarMarket title={ t('markets.title-header') } />\r\n                    \r\n                    <CardMarketList />\r\n\r\n                    <div className=\"markets__content custom-scroll\">\r\n                        <div className=\"markets__table-head\">\r\n                            <FiltersPageMarket />\r\n                        </div>\r\n\r\n                        <div className=\"markets__table-wrap custom-scroll\">\r\n                            <Table />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </section>\r\n            </MarketMainContext.Provider>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default MarketMain;\r\n","import { FC, useState } from 'react';\r\nimport HeaderAdmin from './header/header/HeaderAdmin';\r\nimport MarketMain from './main/MarketMain';\r\nimport '../../assets/css/markets-style.min.css';\r\nimport { MarketsContext } from './context/MarketsContext';\r\n\r\ninterface PropsMarkets {\r\n    \r\n}\r\n\r\nconst Markets: FC<PropsMarkets> = () => {\r\n    const [menuMobile, setMenuMobile] = useState(false);\r\n    const toggleMenuMobile = () => {\r\n        setMenuMobile(!menuMobile);\r\n    }\r\n\r\n    return (\r\n        <MarketsContext.Provider value={{\r\n            menuMobile: {\r\n                menuMobile: menuMobile,\r\n                toggleMenuMobile: toggleMenuMobile\r\n            }\r\n        }} >\r\n            <div className=\"page theme\">\r\n                <div className={\"page__body dashboard\" + (menuMobile ? ' no-scroll' : '')}>\r\n                    <HeaderAdmin />\r\n                    <MarketMain />\r\n                </div>\r\n            </div>\r\n        </MarketsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Markets;\r\n","import { useState, useEffect } from 'react';\r\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport IUseRequest from '../../../../../types/IUseRequest';\r\n\r\nconst useRequestChart = ( axiosParams: AxiosRequestConfig ) : IUseRequest  => {\r\n    const [response, setResponse] = useState<AxiosResponse>();\r\n    const [error, setError] = useState<AxiosError>();\r\n    const [loading, setLoading] = useState(axiosParams.method === \"GET\" || axiosParams.method === \"get\");\r\n\r\n    const fetchData = async (params: AxiosRequestConfig) => {\r\n        try {\r\n            const result = await axios.request(params);\r\n            setResponse(result);\r\n        } catch (err: any) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const sendData = async (params: AxiosRequestConfig) => {\r\n        await fetchData(params);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (axiosParams.method === \"GET\" || axiosParams.method === \"get\") {\r\n            fetchData(axiosParams);\r\n        }\r\n    }, [axiosParams]);\r\n\r\n    return { response: response, error: error, loading: loading, sendData: sendData };\r\n}\r\n\r\nexport default useRequestChart;","import { FC, useContext, useMemo } from 'react';\r\nimport { useState } from 'react';\r\nimport { AreaChart, Area, YAxis } from 'recharts';\r\nimport { getChart } from '../../../../api/rest/CoinService';\r\nimport useRequestChart from './hooks/useRequestChart';\r\nimport { MarketMainContext } from '../context/MarketMainContext';\r\nimport Loader from '../../../shared/loader/Loader';\r\n\r\ninterface CoinChartProps {\r\n    coinId: string,\r\n    color: string,\r\n    width: number,\r\n    height: number,\r\n}\r\n\r\ninterface DataChart {\r\n    x: number,\r\n    y: number,\r\n}\r\n\r\nconst CoinChart: FC<CoinChartProps> = ({ coinId, color, width = 140, height = 70 }) => {\r\n    const { currency } = useContext(MarketMainContext);\r\n    const config = useMemo(() => {\r\n        return getChart(coinId, {\r\n            vs_currency: currency.currency,\r\n            days: '1'\r\n        });\r\n    }, [currency.currency])\r\n\r\n    const { response } = useRequestChart(config);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const chart: DataChart[] = useMemo(() => {\r\n        setIsLoading(false);\r\n        let prices: DataChart[] = [];\r\n\r\n        response?.data?.prices?.forEach((item: any) => {\r\n            prices.push({\r\n                x: item[0],\r\n                y: item[1],\r\n            })\r\n        })\r\n\r\n        const timeout = setTimeout(() => {\r\n            setIsLoading(true);\r\n            clearTimeout(timeout);\r\n        }, 1500);\r\n\r\n        return prices;\r\n    }, [response])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoading\r\n                    ? <Loader isRevert={true} style={{ height: '24px', width: '24px' }} />\r\n                    : <AreaChart\r\n                        width={width}\r\n                        height={height}\r\n                        data={chart}\r\n                        margin={{\r\n                            top: 10,\r\n                            right: 30,\r\n                            left: 0,\r\n                            bottom: 10,\r\n                        }}>\r\n                        <YAxis hide={true} type=\"number\" domain={['auto', 'auto']} />\r\n                        <Area type=\"monotone\" dataKey=\"y\" stroke={color} fill={color} />\r\n                    </AreaChart>\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CoinChart;","import { currency } from './../../../landing/main/hero/purchase/data/currency';\r\nimport { defaultCurrency } from './../../../../helpers/currencies';\r\nimport React from \"react\";\r\nimport ICoin from \"../../../../types/ICoin\";\r\n\r\nexport enum MarketTableFiltersKeyTypes {\r\n    category = 'category',\r\n    search = 'search',\r\n    platform = 'platform',\r\n    coins = 'coins',\r\n    lastPrice = 'lastPrice',\r\n}\r\n\r\nexport interface CoinPlatformsState {\r\n    [coin: string]: string,\r\n}\r\n\r\ninterface IMarketMainPlatform {\r\n    list: CoinPlatformsState,\r\n    addPlatform: (platforms: CoinPlatformsState) => void\r\n}\r\n\r\nexport interface MarketTableFiltersState {\r\n    category?: string,\r\n    search?: string,\r\n    platform?: string,\r\n    coins?: string,\r\n    lastPrice?: string,\r\n    page?: number,\r\n    perPage?: number,\r\n    isFavorite?: boolean,\r\n    currency?: string,\r\n}\r\n\r\ninterface IMarketMainFilters {\r\n    list: MarketTableFiltersState,\r\n    addFilter: (filters: MarketTableFiltersState) => void\r\n}\r\n\r\ninterface ICoins {\r\n    list: string[],\r\n    removeCoin: (coin: string) => void,\r\n    addCoin: (coin: string) => void\r\n}\r\n\r\ninterface ICurrency {\r\n    currency: string,\r\n    changeCurrency: (currency: string) => void\r\n}\r\n\r\ninterface IMarketMainContext {\r\n    platforms: IMarketMainPlatform,\r\n    filters:  IMarketMainFilters,\r\n    coins: ICoins,\r\n    currency: ICurrency,\r\n}\r\n\r\nexport const marketMainState: IMarketMainContext = {\r\n    platforms: {\r\n        list: {},\r\n        addPlatform: function (platforms) {},\r\n    },\r\n    filters: {\r\n        list: {},\r\n        addFilter: function (filters) {},\r\n    },\r\n    coins: {\r\n        list: [],\r\n        removeCoin: function (coin) {},\r\n        addCoin: function (coin) {},\r\n    },\r\n    currency: {\r\n        currency: defaultCurrency,\r\n        changeCurrency: function (currency) {},\r\n    }\r\n}\r\n\r\nexport const MarketMainContext = React.createContext<IMarketMainContext>(marketMainState);","import { FC } from 'react';\r\nimport './assets/css/loader.css';\r\n\r\ninterface LoaderProps {\r\n    isRevert?: boolean,\r\n    style?: any\r\n}\r\n\r\nconst Loader: FC<LoaderProps> = ({ isRevert = false, style= {} }) => {\r\n    const classes = !isRevert ? \"loader\" : \"loader loader-revert\";\r\n\r\n    return (\r\n        <div className=\"wrap-loader\">\r\n            <span className={classes} style={style}></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { FC } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport logo from '../images/logo.svg';\r\nimport logoText from '../images/logo-text.svg';\r\n\r\ninterface LogoProps {\r\n\r\n}\r\n\r\nconst Logo: FC<LogoProps> = () => {\r\n    return (\r\n        <Link className=\"dashboard-header__logo logo\" to=\"/\" aria-label=\"logo\">\r\n            <img className=\"logo__icon\" src={logo} alt=\"\" width=\"32\" height=\"27\" />\r\n            <img className=\"dashboard-header__logo-text\" src={logoText} alt=\"\" width=\"52\" height=\"11\" />\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Logo;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAccount(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 22.5Q25.9 22.5 27.2 21.175Q28.5 19.85 28.5 18Q28.5 16.1 27.2 14.8Q25.9 13.5 24 13.5Q22.15 13.5 20.825 14.8Q19.5 16.1 19.5 18Q19.5 19.85 20.825 21.175Q22.15 22.5 24 22.5ZM24 25.5Q20.9 25.5 18.7 23.3Q16.5 21.1 16.5 18Q16.5 14.85 18.7 12.675Q20.9 10.5 24 10.5Q27.15 10.5 29.325 12.675Q31.5 14.85 31.5 18Q31.5 21.1 29.325 23.3Q27.15 25.5 24 25.5ZM24 48Q18.95 48 14.575 46.15Q10.2 44.3 6.95 41.05Q3.7 37.8 1.85 33.425Q0 29.05 0 24Q0 18.95 1.85 14.575Q3.7 10.2 6.95 6.95Q10.2 3.7 14.575 1.85Q18.95 0 24 0Q29.05 0 33.425 1.85Q37.8 3.7 41.05 6.95Q44.3 10.2 46.15 14.575Q48 18.95 48 24Q48 29.05 46.15 33.425Q44.3 37.8 41.05 41.05Q37.8 44.3 33.425 46.15Q29.05 48 24 48ZM24 45Q27.65 45 31.025 43.825Q34.4 42.65 37.25 40.4Q35.4 38.3 31.975 36.65Q28.55 35 24 35Q19.45 35 16.025 36.65Q12.6 38.3 10.75 40.4Q13.6 42.65 16.975 43.825Q20.35 45 24 45ZM8.6 38.3Q11.1 35.6 15.15 33.8Q19.2 32 24 32Q28.8 32 32.825 33.8Q36.85 35.6 39.35 38.3Q41.75 35.55 43.375 31.875Q45 28.2 45 24Q45 19.55 43.375 15.725Q41.75 11.9 38.925 9.075Q36.1 6.25 32.275 4.625Q28.45 3 24 3Q19.6 3 15.775 4.625Q11.95 6.25 9.1 9.075Q6.25 11.9 4.625 15.725Q3 19.55 3 24Q3 28.2 4.675 31.975Q6.35 35.75 8.6 38.3Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccount);\nexport default __webpack_public_path__ + \"static/media/account.880c1d5c85b53f84efed400d2d3660e0.svg\";\nexport { ForwardRef as ReactComponent };","import { FC, useContext, useState } from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AuthContext } from '../../global/auth/context/AuthContext';\r\nimport account from './img/account.svg'\r\n\r\ninterface UserSelectorProps {\r\n\r\n}\r\n\r\nconst UserSelectorAdmin: FC<UserSelectorProps> = () => {\r\n    const { auth } = useContext(AuthContext);\r\n    const { t } = useTranslation();\r\n\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n    function hanleLogOut(e: any) {\r\n        e.preventDefault();\r\n\r\n        auth.logout();\r\n    }\r\n\r\n    function hanleShowMenu(e: any) {\r\n        setIsActive(!isActive);\r\n    }\r\n\r\n    return (\r\n        <div className={\"dashboard-header__user-dropdown dropdown-menu \" + (isActive ? 'dropdown-menu--active' : '')}>\r\n            <div className=\"dropdown-menu__user-info\" onClick={hanleShowMenu}>\r\n                <img className=\"dropdown-menu__user-icon\" src={account} width=\"48\" height=\"48\" alt=\"Account\" />\r\n                <div className=  \"dropdown-menu__user-name\">{ auth.user?.email }<i className=\"arrow down\"></i></div>\r\n            </div>\r\n            <div className=\"dropdown-menu__menu\">\r\n                <div className=\"dropdown-menu__menu-list\">\r\n                    <a className=\"dropdown-menu__menu-item\" href=\"#!\" onClick={hanleLogOut}>{ t('menu.Logout') }</a>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSelectorAdmin;","export const baseUrlApi: string = 'https://api.coingecko.com/api/v3';","export const getColorClass = (value: number): string => {\r\n    return value > 0 ? 'color-green' : 'color-red';\r\n}\r\n\r\nexport const getColor = (value: number): string => {\r\n    return value > 0 ? '#24ac80' : '#ef4f46';\r\n}","import ISelect from \"../types/ISelect\";\r\n\r\ninterface ISelectCurrency extends ISelect {\r\n    sign: string\r\n}\r\n\r\nexport const selectCurrency: ISelectCurrency[] = [\r\n    {\r\n        value: 'usd',\r\n        label: 'USD',\r\n        sign: '$'\r\n    },\r\n    {\r\n        value: 'gbp',\r\n        label: 'GBP',\r\n        sign: '£'\r\n    },\r\n    {\r\n        value: 'rub',\r\n        label: 'RUB',\r\n        sign: '₽'\r\n    },\r\n];\r\n\r\nexport const getSelectedDefaultCurrency  = (currency: string) : ISelect => {\r\n    return selectCurrency.filter((item: ISelect) => (item.value === currency))[0];\r\n}\r\n\r\nexport const defaultCurrency: string = 'usd';\r\n\r\ninterface ISignCurrency {\r\n    [currency: string]: string,\r\n}\r\n\r\nexport const signCurrency: ISignCurrency = {\r\n    usd: '$',\r\n    gbp: '£',\r\n    rub: '₽',\r\n}\r\n\r\nexport const getCurrency = () : string => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    let currency: string = params.get('currency') ?? '';\r\n\r\n    return currency ? currency : defaultCurrency;\r\n}","import { useState, useEffect } from 'react';\r\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport IUseRequest from '../types/IUseRequest';\r\n\r\nconst useRequest = ( axiosParams: AxiosRequestConfig ) : IUseRequest  => {\r\n    const [response, setResponse] = useState<AxiosResponse>();\r\n    const [error, setError] = useState<AxiosError>();\r\n    const [loading, setLoading] = useState(axiosParams.method === \"GET\" || axiosParams.method === \"get\");\r\n\r\n    const fetchData = async (params: AxiosRequestConfig) => {\r\n        try {\r\n            const result = await axios.request(params);\r\n            setResponse(result);\r\n        } catch (err: any) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const sendData = async (params: AxiosRequestConfig) => {\r\n        await fetchData(params);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (axiosParams.method === \"GET\" || axiosParams.method === \"get\") {\r\n            fetchData(axiosParams);\r\n        }\r\n    }, []);\r\n\r\n    return { response: response, error: error, loading: loading, sendData: sendData };\r\n}\r\n\r\nexport default useRequest;"],"names":["url","baseUrlApi","getCoinsMarkets","params","method","getCoinsList","include_platform","getChart","id","currency","value","label","Classes","marketsState","menuMobile","toggleMenuMobile","MarketsContext","React","className","SelectLanguage","t","useTranslation","location","useLocation","routesShowing","routes","item","notShowMenu","title","map","route","i","isActiveURL","path","pathname","to","useContext","auth","AuthContext","isAuth","UserSelectorAdmin","type","onClick","width","height","xlinkHref","formatingPrice","price","sign","pieces","parseFloat","toFixed","split","ii","length","splice","join","coinId","MarketMainContext","useState","response","setResponse","error","setError","loading","setLoading","defaultCoin","coin","setCoin","useCurrency","setUseCurrency","fetchData","axios","result","data","sendData","useEffect","vs_currency","ids","useCoin","isLoading","setIsLoading","coinCurrent","useMemo","timeout","setTimeout","clearTimeout","Loader","isRevert","style","name","CoinChart","color","getColor","price_change_24h","getColorClass","current_price","signCurrency","price_change_percentage_24h","market_cap","coins","list","DEFAULT_CLASS","ACTIVE_CLASS","filter","classes","setClasses","addCoin","removeCoin","filters","platforms","defaultParams","hasOwnProperty","category","config","useRequest","values","Object","keys","search","toLowerCase","includes","platform","keyPlatform","isFavorite","coinFilter","lastPrice","columns","selector","row","format","index","cell","src","image","marginRight","alt","sortable","minWidth","maxWidth","high_24h","low_24h","total_volume","noDataComponent","progressPending","progressComponent","onChangePage","page","addFilter","onChangeRowsPerPage","currentRowsPerPage","perPage","paginationPerPage","paginationDefaultPage","pagination","setSearch","onChange","e","target","placeholder","preventDefault","i18n","selected","setSelected","valuesSelect","selectList","forEach","push","category_id","language","customStyles","option","padding","borderLeft","textAlign","transition","control","display","menuList","backgroundColor","border","maxHeight","overflowY","scrollbarWidth","valueContainer","provided","state","paddingLeft","dropdownIndicator","transform","selectProps","menuIsOpen","singleValue","opacity","isDisabled","SelectCore","styles","components","IndicatorSeparator","getSelectedDefaultCurrency","selectedCurrency","setSelectedCurrency","selectCurrency","changeCurrency","isSearchable","setValue","key","array","replaceAll","charAt","toUpperCase","slice","items","setItems","component","Platform","Price","Category","Currency","addFiltersMarkets","useSearchParams","searchParams","get","coinsList","setCoinsList","getAllQueryParams","fieldInArray","query","URLSearchParams","window","allQueryParams","setSearchParams","undefined","filtersMarkets","setFiltersMarkets","newFilters","JSON","parse","stringify","setPlatforms","platformsResponse","platformKeys","platformValues","formatKey","addPlatform","newPlatforms","getCurrency","setCurrency","newSearchParams","useFilters","useCoins","usePlatforms","setMenuMobile","Provider","axiosParams","days","useRequestChart","chart","prices","x","y","AreaChart","margin","top","right","left","bottom","YAxis","hide","domain","Area","dataKey","stroke","fill","MarketTableFiltersKeyTypes","marketMainState","defaultCurrency","logo","logoText","isActive","setIsActive","account","user","email","href","logout","usd","gbp","rub"],"sourceRoot":""}